#!/usr/bin/env python3
import argparse
import os
import random
import string
import pyperclip
import threading
import time

def generate_password(length):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def clear_clipboard():
    # Sleep for 45 seconds
    time.sleep(45)
    # Copy a blank string to clear the clipboard
    pyperclip.copy("")
    print("Clipboard cleared after 45 seconds.")

def main():
    parser = argparse.ArgumentParser(description="Generate a random password.")
    parser.add_argument(
        "-l",
        "--length",
        type=int,
        help="Length of the password",
    )
    parser.add_argument(
        "-c",
        "--clip",
        action="store_true",
        help="Copy the generated password to the system clipboard",
    )
    
    args = parser.parse_args()
    length = args.length

    # Check if length is not provided, then check for the environment variable
    if length is None:
        length = int(os.getenv("PASSWDGEN_LENGTH", 19))

    if length <= 0:
        print("Password length should be greater than 0.")
        return

    password = generate_password(length)

    if args.clip:
        # Create a separate thread for clearing the clipboard
        timer_thread = threading.Thread(target=clear_clipboard)
        timer_thread.daemon = True  # Allow the program to exit even if the thread is running
        timer_thread.start()
        
        pyperclip.copy(password)
        print("Password copied to clipboard.")

    else:
        print(password)

if __name__ == "__main__":
    main()
