#!/usr/bin/env python3

import re
import sys
import subprocess

def parse_tasks(text):
    items = re.split(r'^- \[ \] ', text, flags=re.MULTILINE)[1:]
    groups = []

    for item in items:
        lines = item.strip().split('\n')
        group_title = lines[0]
        subitems = lines[1:]

        groups.append({"title": group_title, "body": subitems})

    return groups

def format_group(group, reponame=None):
    bodytext = ""
    if group['body']:
        initial_indent = min(len(line) - len(line.lstrip()) for line in group['body'])
        for subitem in group['body']:
            bodytext += subitem[initial_indent:] + "\n"

    repo_arg = f'-R "{reponame}"' if reponame else ''

    return f"""gh issue create {repo_arg}  --title "{group['title']}" --body "{bodytext}"
            """

if __name__ == "__main__":
    try:
        tasks_string = sys.stdin.read()
    except KeyboardInterrupt:
        print("Quitting")
        sys.exit(0)

    if len(sys.argv) > 2:
        print("Usage: tasks-to-issues [reponame]")
        sys.exit(1)

    reponame = sys.argv[1] if len(sys.argv) == 2 else None

    if "- [ ]" in tasks_string:
        parsed_groups = parse_tasks(tasks_string)
        for group in parsed_groups:
            result = subprocess.run(format_group(group, reponame), shell=True, text=True, capture_output=True)
            if result.stderr:
                print(result.stderr)

            if result.stdout:
                print(f"Issue created (URL): {result.stdout}")
    else:
        lines = tasks_string.strip().split('\n')
        title = lines[0]
        body = '\n'.join(lines[1:])

        repo_arg = f'-R "{reponame}"' if reponame else ''

        result = subprocess.run(f'gh issue create {repo_arg} --title "{title}" --body "{body}"', shell=True, text=True, capture_output=True)
        if result.stderr:
            print(result.stderr)

        if result.stdout:
            print(f"Issue created (URL): {result.stdout}")
